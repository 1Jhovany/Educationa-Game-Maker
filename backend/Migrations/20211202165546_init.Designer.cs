// <auto-generated />
using System;
using EducationalGameMaker;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EducationalGameMaker.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20211202165546_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EducationalGameMaker.Models.Crossword", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Crosswords");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("EducationalGameMaker.Models.DragandDrop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("DragandDrops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "title",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("EducationalGameMaker.Models.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CrosswordId")
                        .HasColumnType("int");

                    b.Property<int?>("DragandDropId")
                        .HasColumnType("int");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CrosswordId");

                    b.HasIndex("DragandDropId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Answer = "dog",
                            Question = "dog?"
                        },
                        new
                        {
                            Id = 2,
                            Answer = "cat",
                            Question = "cat?"
                        },
                        new
                        {
                            Id = 3,
                            Answer = "fish",
                            Question = "fish?"
                        },
                        new
                        {
                            Id = 4,
                            Answer = "fox",
                            Question = "fox?"
                        },
                        new
                        {
                            Id = 5,
                            Answer = "hippo",
                            Question = "hippo?"
                        },
                        new
                        {
                            Id = 6,
                            Answer = "rhino",
                            Question = "rhino?"
                        });
                });

            modelBuilder.Entity("EducationalGameMaker.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "entry"
                        });
                });

            modelBuilder.Entity("EducationalGameMaker.Models.Wordsearch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matrix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Wordsearches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Height = 10,
                            Keywords = "CANVAS, CODE, FUN, FUNCTION, GAMES, JAVASCRIPT, KIDS, PLAY, SHARE, VARIABLE",
                            Matrix = "J, Q, V, N, R, G, N, T, U, I, V, L, A, O, S, A, X, P, S, C,W, P, R, I, D, M, E, I, I, T, K, P, I, T, I, E, T, R, H, K, Z, U, A, C, K, S, G, C, X, T, X, T, B, N, F, Z, Y, S, G, J, O, D, L, U, Y, U, H, A, H, N, A, F, E, F, C, A, N, V, A, S, E, D, O, C, R, P, L, A, Y, A, F, X, E, E, V, C, P, J, H, B",
                            UserId = 1,
                            Width = 10
                        });
                });

            modelBuilder.Entity("EducationalGameMaker.Models.Crossword", b =>
                {
                    b.HasOne("EducationalGameMaker.Models.User", "User")
                        .WithMany("Crosswords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducationalGameMaker.Models.DragandDrop", b =>
                {
                    b.HasOne("EducationalGameMaker.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducationalGameMaker.Models.Todo", b =>
                {
                    b.HasOne("EducationalGameMaker.Models.Crossword", null)
                        .WithMany("Todos")
                        .HasForeignKey("CrosswordId");

                    b.HasOne("EducationalGameMaker.Models.DragandDrop", null)
                        .WithMany("Todos")
                        .HasForeignKey("DragandDropId");
                });

            modelBuilder.Entity("EducationalGameMaker.Models.Wordsearch", b =>
                {
                    b.HasOne("EducationalGameMaker.Models.User", "User")
                        .WithMany("Wordsearchs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EducationalGameMaker.Models.Crossword", b =>
                {
                    b.Navigation("Todos");
                });

            modelBuilder.Entity("EducationalGameMaker.Models.DragandDrop", b =>
                {
                    b.Navigation("Todos");
                });

            modelBuilder.Entity("EducationalGameMaker.Models.User", b =>
                {
                    b.Navigation("Crosswords");

                    b.Navigation("Wordsearchs");
                });
#pragma warning restore 612, 618
        }
    }
}
